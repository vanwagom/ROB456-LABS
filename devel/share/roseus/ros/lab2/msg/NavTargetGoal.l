;; Auto-generated. Do not edit!


(when (boundp 'lab2::NavTargetGoal)
  (if (not (find-package "LAB2"))
    (make-package "LAB2"))
  (shadow 'NavTargetGoal (find-package "LAB2")))
(unless (find-package "LAB2::NAVTARGETGOAL")
  (make-package "LAB2::NAVTARGETGOAL"))

(in-package "ROS")
;;//! \htmlinclude NavTargetGoal.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))


(defclass lab2::NavTargetGoal
  :super ros::object
  :slots (_goal ))

(defmethod lab2::NavTargetGoal
  (:init
   (&key
    ((:goal __goal) (instance geometry_msgs::PointStamped :init))
    )
   (send-super :init)
   (setq _goal __goal)
   self)
  (:goal
   (&rest __goal)
   (if (keywordp (car __goal))
       (send* _goal __goal)
     (progn
       (if __goal (setq _goal (car __goal)))
       _goal)))
  (:serialization-length
   ()
   (+
    ;; geometry_msgs/PointStamped _goal
    (send _goal :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; geometry_msgs/PointStamped _goal
       (send _goal :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; geometry_msgs/PointStamped _goal
     (send _goal :deserialize buf ptr-) (incf ptr- (send _goal :serialization-length))
   ;;
   self)
  )

(setf (get lab2::NavTargetGoal :md5sum-) "e88395c1654d49c84d945905e3bcde8e")
(setf (get lab2::NavTargetGoal :datatype-) "lab2/NavTargetGoal")
(setf (get lab2::NavTargetGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
geometry_msgs/PointStamped goal

================================================================================
MSG: geometry_msgs/PointStamped
# This represents a Point with reference coordinate frame and timestamp
Header header
Point point

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
string frame_id

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

")



(provide :lab2/NavTargetGoal "e88395c1654d49c84d945905e3bcde8e")


